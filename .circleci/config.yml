version: 2.1
jobs:
  build-deploy:
    machine: true
    steps:
      - checkout
      - run:
          name: Build and push Docker image to Heroku
          command: |
            set -x
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:login
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:push -a music-kulture-api web
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:release -a music-kulture-api web
  run:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - run: gradle run -x test
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run: gradle clean build -x test && echo "Finished building..."
  test:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Test
          command: gradle build test
  approve:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - run: echo "Waiting for approval"
workflows:
  build-test-deploy:
    jobs:
      - build:
          pre-steps: # steps to run before steps defined in the job bar
            - run:
                command: echo "Starting building..."
          filters:
            branches:
              only:
                - feature
                - develop
                - master
      - test:
          requires:
            - build
          filters: # using regex filters requires the entire branch to match
            branches:
              only: # only branches matching the below regex filters will run
                - develop
                - release-.*
                - master
      - approve:
          type: approval
          filters:
            branches:
              only: master
      - build-deploy:
          requires:
            - test
            - approve
          filters:
            branches:
              only: master